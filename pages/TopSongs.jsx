import react, { useEffect } from "react";
import Head from "next/head";
import styles from "../styles/pages/Tops.module.scss";
import coverArt from "../public/coverArt.png";
import RankingItem from "../src/components/RankingItem";
import { login, SpotifyApi, refreshToken } from "../src/services/spotify";
import nookies from "nookies";

export default function TopSongs({ data, runLogin }) {
  const { topS, topM, topL } = data;
  useEffect(() => {
    console.log(runLogin);
    if (runLogin) {
      console.error("no token");
      login();
    }
  }, [runLogin]);

  function mountList(track, index) {
    console.log(track.album.images);
    if (index === 0) {
      return (
        <RankingItem
          rank={index + 1}
          img={track.album.images[1].url}
          title={track.name}
          artist={track.artists[0].name}
          bgc="#fcdb66"
          fc="black"
        />
      );
    } else if (index === 1) {
      return (
        <RankingItem
          rank={index + 1}
          img={track.album.images[1].url}
          title={track.name}
          artist={track.artists[0].name}
          bgc="#afb8c0"
          fc="black"
        />
      );
    } else if (index === 2) {
      return (
        <RankingItem
          rank={index + 1}
          img={track.album.images[1].url}
          title={track.name}
          artist={track.artists[0].name}
          bgc="#c59455"
          fc="black"
        />
      );
    } else {
      return (
        <RankingItem
          rank={index + 1}
          img={track.album.images[1].url}
          title={track.name}
          artist={track.artists[0].name}
          bgc="#212121"
          fc="white"
        />
      );
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Spotify Stats - Top Songs</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.pageTitle}>
        <h2>Top Songs</h2>
      </div>

      <div className={styles.top}>
        <div className={styles.timePeriod}>
          <h3>1 month</h3>
          <div>
            <ul>{topS.map((track, index) => mountList(track, index))}</ul>
          </div>
        </div>
        <div className={styles.timePeriod}>
          <h3>6 months</h3>
          <div>
            <ul>{topM.map((track, index) => mountList(track, index))}</ul>
          </div>
        </div>
        <div className={styles.timePeriod}>
          <h3>6 months</h3>
          <div>
            <ul>{topL.map((track, index) => mountList(track, index))}</ul>
          </div>
        </div>
      </div>
    </div>
  );
}

export async function getServerSideProps(ctx) {
  const time = new Date();

  const cookies = nookies.get(ctx);

  if (cookies.access_token) {
    if (cookies.token_time + cookies.expires_in < time.getTime()) {
      console.warn("into refresh");
      const newCookies = await refreshToken(ctx);

      const data = await getLists(newCookies.access_token);
      return { props: { data, runLogin: false } };
    }

    const data = await getLists(cookies.access_token);

    return { props: { data, runLogin: false } };
  } else {
    return {
      props: { data: { topS: [], topM: [], topL: [] }, runLogin: true },
    };
  }
}

async function getLists(token) {
  SpotifyApi.setAccessToken(token);
  const topS = await SpotifyApi.getMyTopTracks({
    limit: 20,
    offset: 0,
    time_range: "short_term",
  });

  const topM = await SpotifyApi.getMyTopTracks({
    limit: 20,
    offset: 0,
    time_range: "medium_term",
  });

  const topL = await SpotifyApi.getMyTopTracks({
    limit: 20,
    offset: 0,
    time_range: "long_term",
  });

  return {
    topS: topS.body.items,
    topM: topM.body.items,
    topL: topL.body.items,
  };
}
